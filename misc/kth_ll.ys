.pos 0
# main
    irmovq stack, %rsp
    irmovq ele0, %rdi
    irmovq $4, %rsi
    call kth_ll
    rmmovq %rbp, -8(%rsp)
    halt    

kth_ll:
	xorq %rax, %rax
	irmovq $0, %rcx
	irmovq $1, %rbx
	jmp check
loop:
	subq %rbx, %rsi
	subq %rcx, %rsi
	jne next
	mrmovq (%rdi), %rax
	xorq %rdi, %rdi
	jmp check
next:	
	mrmovq 8(%rdi), %rdi 
check:
	subq %rcx, %rdi
	jne loop
	ret


.pos 0x200
ele0:
.quad 0x0005
.quad ele1
ele1:
.quad 0x000c
.quad ele2
ele2:
.quad 0x0010
.quad ele3
ele3:
.quad 0x001a
.quad ele4
ele4:
.quad 0x0030
.quad ele5
ele5:
.quad 0x0045
.quad ele6
ele6:
.quad 0x005e
.quad 0 # NULL

.pos 0x800
stack:
